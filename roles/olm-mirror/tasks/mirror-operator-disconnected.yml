- name: Import operator for {{ operator.name }}
  when: operator.mirror
  block:
    - debug:
        msg: "Importing {{ operator.name }}"

    - name: Remove old operator mirror (v2) directories
      become: yes
      file:
        path: "{{ bundle_dir }}/v2"
        state: absent
    
    - name: Extract {{ operator.name }}
      when: operator.mirror
      unarchive:
        src: "{{ bundle_dir }}/olm-{{ ocp_release }}-{{ operator.name }}.gz"
        dest: "{{ bundle_dir }}"
    
    - name: Find manifests directory
      find:
        paths: "{{ bundle_dir }}"
        patterns: "manifests-redhat-operator-index*"
        use_regex: yes
        file_type: directory
        recurse: no
      register: manifests_dirs
    
    - name: Remove manifests directory
      when: manifests_dirs.matched > 0
      become: yes
      file:
        path: "{{ manifests_dir }}"
        state: absent
      loop: "{{ manifests_dirs.files|map(attribute='path')|list }}"
      loop_control:
        loop_var: manifests_dir
        label: "{{ manifests_dir|basename }}"
    
    - name: Create {{ operator.name }} manifest
      command: >
        oc adm catalog mirror -a {{ pullsecret }} -a {{ registry_secret }}
        file://mirror/{{ local_namespace }}/{{ rh_catalog_image|basename }} {{ local_registry }}/{{ local_namespace }}
      args:
        chdir: "{{ bundle_dir }}"

    - name: Find built {{ tmp_icsp }} file
      find:
        paths: "{{ bundle_dir }}"
        file_type: file
        patterns: "{{ tmp_icsp }}"
        recurse: yes
      register: tmp_icsp_file

    - name: Check that at least one {{ tmp_icsp }} file was found
      assert:
        that:
          - tmp_icsp_file.matched >= 1
        fail_msg: "Found {{ tmp_icsp_file.matched }} icsp file(s), there should be at least 1"

    - name: Update imageContentSourcePolicy
      replace:
        path: "{{ tmp_icsp_file.files[0].path }}"
        regexp: "mirror/{{ local_namespace }}/{{ rh_catalog_image.split(':')[0]|basename }}"
        replace: 'registry.redhat.io'        
